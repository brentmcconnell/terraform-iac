variables:
- template: tf-vars.yml  # Template reference

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: 'plan and apply'
  steps:
  - template: azure-login.yml

  - script: |
      cd iac
      echo '#######Terraform Init########'
      terraform init \
          -backend-config="storage_account_name=$(TF_STORAGE_ACCT_NAME)" \
          -backend-config="container_name=$(TF_STORAGE_CONT_NAME)" \
          -backend-config="access_key=$(ak-backend-sa-2141)" \
          -backend-config="key=$(TF_STATE_FILE)"
      echo '#######Terraform Plan########'
      terraform plan \
          -var="clientId=$(sp-client-id-tf-2141)" \
          -var="tenantId=$(sp-tenant-id-tf-2141)" \
          -var="subscriptionId=$(sp-subscription-id-tf-2141)" \
          -out="out.plan"
      echo '#######Terraform Apply########'
      terraform apply out.plan
    displayName: 'Terraform Init, Plan and Apply '

- job: 'destroy'
  steps:
  - template: azure-login.yml

  - script: |
      cd iac
      echo '#######Terraform Init########'
      terraform init \
          -backend-config="storage_account_name=$(TF_STORAGE_ACCT_NAME)" \
          -backend-config="container_name=$(TF_STORAGE_CONT_NAME)" \
          -backend-config="access_key=$(ak-backend-sa-2141)" \
          -backend-config="key=$(TF_STATE_FILE)"
      echo '#######Terraform Destroy########'
      terraform destroy \
          -var="clientId=$(sp-client-id-tf-2141)" \
          -var="tenantId=$(sp-tenant-id-tf-2141)" \
          -var="subscriptionId=$(sp-subscription-id-tf-2141)" 
    displayName: 'Terraform Destroy'
