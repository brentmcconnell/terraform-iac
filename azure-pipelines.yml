variables:
- template: tf-vars.yml  # Template reference

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: deploy
  dependsOn: []
  pool: 
    vmImage: 'ubuntu-latest'
  jobs:
  - deployment: plan_and_apply
    displayName: 'Build Environment'
    environment: qa
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              ls -la
          - template: azure-login.yml
          - script: |
              ls -la
          - checkout: self
          - script: |
              ls -la 
              cd iac
              ls -la
              echo '#######Terraform Init########'
              terraform init \
                  -backend-config="storage_account_name=$(TF_STORAGE_ACCT_NAME)" \
                  -backend-config="container_name=$(TF_STORAGE_CONT_NAME)" \
                  -backend-config="access_key=$(ak-backend-sa-2141)" \
                  -backend-config="key=$(TF_STATE_FILE)"
              echo '#######Terraform Plan########'
              terraform plan \
                  -var="clientId=$(sp-client-id-tf-2141)" \
                  -var="tenantId=$(sp-tenant-id-tf-2141)" \
                  -var="subscriptionId=$(sp-subscription-id-tf-2141)" \
                  -out="out.plan"
              echo '#######Terraform Apply########'
              terraform apply out.plan
            displayName: 'Terraform Init, Plan and Apply '
 
- stage: cleanup 
  dependsOn: deploy
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - deployment: destroy
    displayName: 'Destroy Environment'
    environment: theend
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-login.yml
          - checkout: self
          - script: |
              cd iac
              echo '#######Terraform Init########'
              terraform init \
                  -backend-config="storage_account_name=$(TF_STORAGE_ACCT_NAME)" \
                  -backend-config="container_name=$(TF_STORAGE_CONT_NAME)" \
                  -backend-config="access_key=$(ak-backend-sa-2141)" \
                  -backend-config="key=$(TF_STATE_FILE)"
              echo '#######Terraform Destroy########'
              terraform destroy -auto-approve \
                  -var="clientId=$(sp-client-id-tf-2141)" \
                  -var="tenantId=$(sp-tenant-id-tf-2141)" \
                  -var="subscriptionId=$(sp-subscription-id-tf-2141)" 
            displayName: 'Terraform Destroy'
